# 🗂️ JAVA COLLECTIONS: LIST, SET E MAP

Projeto criado para demonstrar, com exemplos práticos, como funcionam as principais coleções do Java: **List**, **Set** e **Map**. Ideal para quem está aprendendo sobre estruturas de dados e deseja entender as diferenças no armazenamento e manipulação de elementos.

---

## 🚀 Funcionalidades

✅ Uso das principais coleções:

- 📋 **List** – aceita elementos duplicados e mantém a ordem de inserção  
- 🚫 **Set** – não permite duplicatas e não garante ordem  
- 🔑 **Map** – estrutura de chave-valor, não permite chaves duplicadas

---

## 🧠 O Que Você Vai Aprender

- Inserção e acesso de dados em uma `List`
- Garantia de unicidade com `Set`
- Organização de informações com `Map` (chave-valor)
- Impressão de dados no console com clareza
- Diferenças entre `ArrayList`, `HashSet` e `HashMap`

---

## 💻 Exemplo de Uso no Console

### 📋 List (ArrayList)
```java
List<String> funcionarios = new ArrayList<>();
funcionarios.add("João");
funcionarios.add("Maria");
funcionarios.add("João"); // Duplicado permitido e a ordem é mantida!
System.out.println(funcionarios);
Saída Esperada:

[João, Maria, João]
Set (HashSet)
Java

Set<String> produtos = new HashSet<>(); // Não permite duplicatas
produtos.add("Notebook");
produtos.add("Mouse");
produtos.add("Teclado");
produtos.add("Mouse"); // Duplicado é simplesmente ignorado!
System.out.println(produtos);
Saída Esperada (a ordem pode variar):

[Notebook, Mouse, Teclado]
Map (HashMap)
Java

Map<Integer, String> clientes = new HashMap<>();
clientes.put(1, "Carlos");
clientes.put(2, "Ana");
clientes.put(3, "Carlos"); // Valor duplicado é permitido, mas a chave é única!
System.out.println(clientes.get(1));
Saída Esperada:

Carlos
🛠️ Tecnologias Utilizadas
Java 17+: A versão mais recente para aproveitar os recursos modernos.

IDEs: IntelliJ IDEA, Eclipse ou VSCode - utilize a sua preferida!

Execução via terminal (console) para uma visualização rápida e direta.

📂 Estrutura do Projeto
collections-java/
├── Principal.java
└── README.md
💡 Aprendizados Principais
Ao explorar este projeto, você fortalecerá seu conhecimento sobre:

As diferenças cruciais entre List, Set e Map.

Estratégias para lidar com elementos duplicados em suas estruturas de dados.

A importância da visualização e testes no console para validação.

Boas práticas no uso das coleções Java em cenários reais.

🤝 Contribuição
Contribuições são muito bem-vindas!
Sinta-se à vontade para clonar o repositório, testar os exemplos, criar pull requests ou abrir issues com sugestões.

📫 Contato
Desenvolvido com 💻 e ☕ por César Henrique

🔗 LinkedIn
🔗 GitHub

